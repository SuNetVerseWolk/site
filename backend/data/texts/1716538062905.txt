{"text":"<div class=\"entry\" style=\"padding-bottom: 20px; text-align: justify; min-height: 400px;\"><span class=\"block\" style=\"font-family: Roboto, sans-serif; text-align: left; text-indent: 26.4667px; display: block;\"><strong style=\"hyphens: auto; background-color: rgb(255, 255, 255);\"><font color=\"#66665e\" size=\"5\">Принципы организации ЭВМ</font></strong></span><span class=\"block\" style=\"font-family: Roboto, sans-serif; text-align: left; text-indent: 26.4667px; display: block;\"><strong style=\"hyphens: auto; background-color: rgb(255, 255, 255);\"><font color=\"#66665e\" size=\"5\"><br></font></strong></span><p class=\"MsoNormal\" align=\"center\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-align: center; text-indent: 19.85pt;\"><span style=\"font-size: large; color: black; text-indent: 19.85pt; text-align: justify;\">Архитектурой&nbsp;компьютера считается его представление на неко­тором общем уровне, включающее описание пользовательских воз­можностей программирования, системы команд, системы адреса­ции, организации памяти и т. д. Архитектура определяет принципы действия, информационные связи и взаимное соединение основных устройств компьютера:&nbsp;процессора, основной памяти (ОП), внешних запоминающих устройств (ВЗУ) и периферийных устройств (ПУ).&nbsp;Совокупность процессора и основной памяти называют центральным устройством (ЦУ)&nbsp;компьютера. Общность архитектуры разных компьютеров обеспечивает их со­вместимость с точки зрения пользователя.</span><br></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Структура&nbsp;компьютера — это совокупность его функциональ­ных элементов и связей между ними. Элементами могут быть самые различные устройства — от основных устройств компьютера до простейших схем. Структура компьютера графически представля­ется в виде структурных схем, с помощью которых можно дать опи­сание компьютера на любом уровне детализации.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">В настоящее время в зависимости от организации ЦУ различают два вида архитектур ЭВМ:<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">1 Архитектура фон Неймана.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">2 Гарвардская архитектура.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Принципы (архитектура) фон Неймана<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">В основу построения большинства компьютеров положены сле­дующие общие принципы, сформулированные в 1945 г. американ­ским ученым Джоном фон Нейманом.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">1. Принцип программного управления.&nbsp;Из него следует, что про­грамма состоит из набора команд, которые выполняются процессо­ром автоматически друг за другом в определенной последователь­ности.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Выборка команд программы из памяти осуществляется с помощью&nbsp;счетчика команд.&nbsp;Этот узел процессора последовательно увели­чивает хранимый в нем адрес очередной команды на длину коман­ды. Так как команды программы расположены в памяти друг за дру­гом, то тем самым организуется выборка цепочки команд из после­довательно расположенных ячеек памяти.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Если после выполнения команды следует перейти не к следую­щей, а к какой-то другой, используются команды&nbsp;условного или без­условного переходов (ветвления),&nbsp;которые заносят в счетчик команд номер ячейки памяти, содержащей следующую команду. Выборка команд программы из памяти прекращается после достижения и выполнения команды «стоп».<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Таким образом, процессор исполняет программу автоматически, без вмешательства человека.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">2. Принцип однородности памяти.&nbsp;Программы и данные хранятся в одной и той же памяти. Поэтому компьютер не различает, что хранится в данной ячейке памяти — число, текст или команда. Над командами можно выполнять такие же действия, как и над данны­ми. Это открывает целый ряд возможностей. Например, программа в процессе своего выполнения также может подвергаться переработ­ке, что позволяет задавать в самой программе правила получения некоторых ее частей. Более того, команды одной программы мо­гут быть получены как результаты исполнения другой программы. На этом принципе основаны методы&nbsp;трансляции —перевода текста программы с языка программирования высокого уровня на язык конкретной машины.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">3.Принцип адресности.&nbsp;Структурно основная память состоит из перенумерованных ячеек; процессору в произвольный момент вре­мени доступна любая ячейка. Отсюда следует возможность давать имена областям памяти, так, чтобы к запомненным в них значени­ям можно было впоследствии обращаться в процессе выполнения программ с использованием присвоенных имен.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Гарвардская архитектура.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Отличается от архитектуры фон Неймана разбивкой основной памяти на две части: памяти программ и памяти данных. Используется в микроконтроллерах.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Структурные схемы современных ЭВМ<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Если абстрагироваться от подробностей, то современные ЭВМ можно разделить на два типа:<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">1. Большие (универсальные) ЭВМ.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">2 .Персональные компьютеры.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Собственно обработка данных производится процессором, содержащим арифметико-логическое устройство (АЛУ) и устройство управления (УУ). В этих ЭВМ возникает проблема организации взаимодействия быстродействующего процессора с большим числом сравнительно медленно действующих периферийных устройств. Данная проблема решается при помощи специализированных&nbsp;процессоров ввода-вывода (каналов ввода-вывода), которые подразделяются на два вида:<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">1. Мультиплексные каналы.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">2. Селекторные каналы.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Мультиплексный канал обслуживает несколько одновременно работающих с небольшой скоростью ПУ (печать, сканер и т.д.)<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Селекторный канал связывает процессор и память с ПУ, работающими с высокой скоростью передачи данных (магнитные диски, магнитные барабаны и т.д.), разрешая одновременную работу только одному ПУ.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">В этих компьютерах процессор (процессоры) и блоки памяти (ОП) взаимо­действуют между собой и с внешними устройствами (ВнУ) через внутрен­ний канал, называемой также системной магистралью, общий для всех устройств.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Физически&nbsp;магистраль&nbsp;представляет собой многопроводную линию с гнездами для подключения электронных схем. Совокупность проводов магистрали разделяется на отдельные группы: шину адре­са, шину данных и шину управления.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Периферийные устройства подключаются к ап­паратуре компьютера через специальные&nbsp;контроллеры,&nbsp;которые осво­бождают процессор от непосредственного управления функциониро­ванием данного оборудования.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Принципы фон Неймана<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">1.&nbsp;&nbsp;&nbsp; Использование двоичной системы счисления в вычислительных машинах. Преимущество перед десятичной системой счисления заключается в том, что устройства можно делать достаточно простыми, арифметические и логические операции в двоичной системе счисления также выполняются достаточно просто.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">2.&nbsp;&nbsp;&nbsp; Программное управление ЭВМ. Работа ЭВМ контролируется программой, состоящей из набора команд. Команды выполняются последовательно друг за другом. Созданием машины с хранимой в памяти программой было положено начало тому, что мы сегодня называем программированием.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">3.&nbsp;&nbsp;&nbsp; Память компьютера используется не только для хранения данных, но и программ. При этом и команды программы и данные кодируются в двоичной системе счисления, т.е. их способ записи одинаков. Поэтому в определенных ситуациях над командами можно выполнять те же действия, что и над данными.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">4.&nbsp;&nbsp;&nbsp; Ячейки памяти ЭВМ имеют адреса, которые последовательно пронумерованы. В любой момент можно обратиться к любой ячейке памяти по ее адресу. Этот принцип открыл возможность использовать переменные в программировании.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">5.&nbsp;&nbsp;&nbsp; Возможность условного перехода в процессе выполнения программы. Не смотря на то, что команды выполняются последовательно, в программах можно реализовать возможность перехода к любому участку кода.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Самым главным следствием этих принципов можно назвать то, что теперь программа уже не была постоянной частью машины (как например, у калькулятора). Программу стало возможно легко изменить. А вот аппаратура, конечно же, остается неизменной, и очень простой.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Как взаимодействуют между собой устройства, представляющие основные логические компоненты ЭВМ, определяется типом архитектуры. Основные классические типы архитектур:<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; магистральная,<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; «звезда»,<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; иерархическая.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Классическая архитектура (архитектура фон Неймана) — одно арифметико-логическое устройство (АЛУ), через которое проходит поток данных, и одно устройство управления (УУ), через которое проходит поток команд — программа. Это однопроцессорный компьютер.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">К этому типу архитектуры относится и архитектура персонального компьютера с общей шиной. Все функциональные блоки здесь связаны между собой общей шиной, называемой также системной магистралью.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Архитектура типа «звезда» предполагает, что ЦП соединяется непосредственно с внешними устройствами и управляет их работой. Каждое устройство может связываться с любым другим. Этот способ применялся в двух первых поколениях машин, но с возрастанием числа устройств машины такую организацию становится очень сложно реализовать<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">В настоящее время используется иерархическая архитектура: ЦП соединен с периферийными процессорами, управляющими другими периферийными процессорами или внешними устройствами.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Под архитектурой компьютера понимается его логическая организация, структура, ресурсы, т. е. средства вычислительной системы. Архитектура современных ПК основана на магистрально-модульном принципе.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Модульный принцип позволяет потребителю самому подобрать нужную ему конфигурацию компьютера и производить при необходимости его модернизацию. Модульная организация системы опирается на магистральный (шинный) принцип обмена информации. Магистраль или системная шина - это набор электронных линий, связывающих воедино по адресации памяти, передачи данных и служебных сигналов процессор, память и периферийные устройства.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Обмен информацией между отдельными устройствами ЭВМ производится по трем многоразрядным шинам, соединяющим все модули, - шине данных, шине адресов и шине управления.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Подключение отдельных модулей компьютера к магистрали на физическом уровне осуществляется с помощью контроллеров, а на программном обеспечивается драйверами. Контроллер принимает сигнал от процессора и дешифрует его, чтобы соответствующее устройство смогло принять этот сигнал и отреагировать на него. За реакцию устройства процессор не отвечает - это функция контроллера. Поэтому внешние устройства ЭВМ заменяемы, и набор таких модулей произволен.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Разрядность шины данных задается разрядностью процессора, т. е. количеством двоичных разрядов, которые процессор обрабатывает за один такт.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Данные по шине данных могут передаваться как от процессора к какому-либо устройству, так и в обратную сторону, т. е. шина данных является двунаправленной. К основным режимам работы процессора с использованием шины передачи данных можно отнести следующие: запись/чтение данных из оперативной памяти и из внешних запоминающих устройств, чтение данных с устройств ввода, пересылка данных на устройства вывода.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Выбор абонента по обмену данными производит процессор, который формирует код адреса данного устройства, а для ОЗУ - код адреса ячейки памяти. Код адреса передается по адресной шине, причем сигналы передаются в одном направлении, от процессора к устройствам, т. е. эта шина является однонаправленной.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">По шине управления передаются сигналы, определяющие характер обмена информацией, и сигналы, синхронизирующие взаимодействие устройств, участвующих в обмене информацией.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Внешние устройства к шинам подключаются посредством интерфейса. Под интерфейсом понимают совокупность различных характеристик какого-либо периферийного устройства ПК, определяющих организацию обмена информацией между ним и центральным процессором. В случае несовместимости интерфейсов (например, интерфейс системной шины и интерфейс винчестера) используют контроллеры.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Классификация Флина<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Чтобы дать более полное представление о многопроцессорных вычислительных системах, помимо высокой производительности необходимо назвать и другие отличительные особенности. Прежде всего, это необычные архитектурные решения, направленные на повышение производительности (работа с векторными операциями, организация быстрого обмена сообщениями между процессорами или организация глобальной памяти в многопроцессорных системах и др.).<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">Понятие архитектуры высокопроизводительной системы является достаточно широким, поскольку под архитектурой можно понимать и способ параллельной обработки данных, используемый в системе, и организацию памяти, и топологию связи между процессорами, и способ исполнения системой арифметических операций. Попытки систематизировать все множество архитектур впервые были предприняты в конце 60-х годов и продолжаются по сей день.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">В 1966 г. М.Флинном (Flynn) был предложен чрезвычайно удобный подход к классификации архитектур вычислительных систем. В его основу было положено понятие потока, под которым понимается последовательность элементов, команд или данных, обрабатываемая процессором. Соответствующая система классификации основана на рассмотрении числа потоков инструкций и потоков данных и описывает четыре архитектурных класса:<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">SISD&nbsp;= Single Instruction Single Data<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">MISD&nbsp;= Multiple Instruction Single Data<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">SIMD&nbsp;= Single Instruction Multiple Data<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">MIMD&nbsp;= Multiple Instruction Multiple Data<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">SISD (single instruction stream / single data stream) – одиночный поток команд и одиночный поток данных. К этому классу относятся последовательные компьютерные системы, которые имеют один центральный процессор, способный обрабатывать только один поток последовательно исполняемых инструкций. В настоящее время практически все высокопроизводительные системы имеют более одного центрального процессора, однако каждый из них выполняет несвязанные потоки инструкций, что делает такие системы комплексами SISD-систем, действующих на разных пространствах данных. Для увеличения скорости обработки команд и скорости выполнения арифметических операций может применяться конвейерная обработка. В случае векторных систем векторный поток данных следует рассматривать как поток из одиночных неделимых векторов.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">MISD (multiple instruction stream / single data stream) – множественный поток команд и одиночный поток данных. Теоретически в этом типе машин множество инструкций должно выполняться над единственным потоком данных. До сих пор ни одной реальной машины, попадающей в данный класс, создано не было.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">SIMD (single instruction stream / multiple data stream) – одиночный поток команд и множественный поток данных. Эти системы обычно имеют большое количество процессоров, от 1024 до 16384, которые могут выполнять одну и ту же инструкцию относительно разных данных в жесткой конфигурации. Единственная инструкция параллельно выполняется над многими элементами данных.<o:p></o:p></font></span></p><p class=\"MsoNormal\" style=\"color: rgb(85, 85, 85); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); margin: 0cm 0cm 0pt; line-height: 18px; text-indent: 19.85pt;\"><span style=\"line-height: 28px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\"><font size=\"4\">MIMD (multiple instruction stream / multiple data stream) – множественный поток команд и множественный поток данных. Эти машины параллельно выполняют несколько потоков инструкций над различными потоками данных. В отличие от упомянутых выше многопроцессорных SISD-машин, команды и данные связаны, потому что они представляют различные части одной и той же задачи. Например, MIMD-системы могут параллельно выполнять множество подзадач с целью сокращения времени выполнения основной задачи. Большое разнообразие попадающих в данный класс систем делает классификацию Флинна не полностью адекватной. Действительно, и четырехпроцессорный SX-5 компании NEC, и тысячепроцессорный Cray T3E попадают в этот класс.</font></span></p></div>"}