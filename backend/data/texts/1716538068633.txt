{"text":"<span class=\"block\" style=\"display: block; font-family: Roboto, sans-serif;\"><font size=\"5\" style=\"\" color=\"#66665e\"><strong style=\"hyphens: auto;\">Организация работы и функционирование процессора. Микропроцессоры типа&nbsp;</strong><strong style=\"hyphens: auto;\">CISC</strong><strong style=\"hyphens: auto;\">,</strong><strong style=\"hyphens: auto;\">RISC</strong><strong style=\"hyphens: auto;\">,&nbsp;</strong><strong style=\"hyphens: auto;\">MISC</strong><strong style=\"hyphens: auto;\">.Характеристики и структура микропроцессора. Устройство управления, АЛУ, микропроцессорная память: назначение, упрощенные функциональные схемы.</strong></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"5\"><strong style=\"hyphens: auto;\"><br></strong></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif; font-size: 15px;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Организация работы процессора:</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Последовательная обработка.</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Во время процесса процессор считывает последовательность команд, содержащихся в памяти, и исполняет их. Очерёдность считывания команд изменяется в случае, если процессор считывает команду перехода — тогда адрес следующей команды может оказаться другим. Другим примером изменения процесса может служить случай получения команды останова или переключение в режим обработки аппаратного прерывания.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Скорость перехода от одного этапа цикла к другому определяется тактовым генератором. Тактовый генератор вырабатывает импульсы, служащие ритмом для центрального процессора.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Параллельная обработка.</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">В основу было положено понятие потока, под которым понимается последовательность элементов, команд или данных, обрабатываемая процессором. Соответствующая система классификации основана на рассмотрении числа потоков инструкций и потоков данных и описывает четыре архитектурных класса:</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">SISD (single&nbsp;instruction&nbsp;stream&nbsp;/&nbsp;single&nbsp;data&nbsp;stream) - одиночный поток команд и одиночный поток данных</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">MISD (multiple&nbsp;instruction&nbsp;stream&nbsp;/&nbsp;single&nbsp;data&nbsp;stream) - множественный поток команд и одиночный поток данных.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">SIMD (single&nbsp;instruction&nbsp;stream&nbsp;/&nbsp;multiple&nbsp;data&nbsp;stream) - одиночный поток команд и множественный поток данных.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">MIMD (multiple&nbsp;instruction&nbsp;stream&nbsp;/&nbsp;multiple&nbsp;data&nbsp;stream) - множественный поток команд и множественный поток данных</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">В основе параллельного компьютера лежит идея использования для решения одной задачи нескольких процессоров, работающих сообща, причем процессоры могут быть как скалярными, так и векторными.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Конвейерная обработка.</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Конвейерная архитектура (pipelining) была введена в центральный процессор с целью повышения быстродействия. Обычно для выполнения каждой команды требуется осуществить некоторое количество однотипных операций,&nbsp;например: выборка команды из ОЗУ, дешифрация команды, адресация операнда в ОЗУ, выборка операнда из ОЗУ, выполнение команды, запись результата в ОЗУ. Каждую из этих операций сопоставляют одной ступени конвейера.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><span style=\"font-size: large;\"><br></span></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><span style=\"font-size: large;\">Например, конвейер микропроцессора с архитектурой MIPS-I содержит четыре стадии:</span></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">получение и декодирование инструкции (Fetch)</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">адресация и выборка операнда из ОЗУ (Memory&nbsp;access)</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">выполнение арифметических операций (Arithmetic&nbsp;Operation)</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">сохранение результата операции (Store)</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">После освобождения k-й ступени конвейера она сразу приступает к работе над следующей командой. Если предположить, что каждая ступень конвейера тратит единицу времени на свою работу, то выполнение команды на конвейере длиной в n ступеней займёт n единиц времени, однако в самом оптимистичном случае результат выполнения каждой следующей команды будет получаться через каждую единицу времени</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><strong style=\"hyphens: auto;\">Суперскалярная</strong><strong style=\"hyphens: auto;\">&nbsp;обработка.</strong></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Способность выполнения нескольких машинных инструкций за один такт процессора. Появление этой технологии привело к существенному увеличению производительности.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Основными параметрами процессоров являются:</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">тактовая частота,</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">разрядность,</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">рабочее напряжение,</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">коэффициент внутреннего умножения тактовой частоты,</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">размер кэш памяти.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Тактовая частота определяет количество элементарных операций (тактов), выполняемые процессором за единицу времени. Тактовая частота современных процессоров измеряется в МГц (1 Гц соответствует выполнению одной операции за одну секунду, 1 МГц=106&nbsp;Гц). Чем больше тактовая частота, тем больше команд может выполнить процессор, и тем больше его производительность. Первые процессоры, которые использовались в ПК работали на частоте 4,77 МГц, сегодня рабочие частоты современных процессоров достигают отметки в 2 ГГц (1 ГГц=103&nbsp;МГц).</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Разрядность процессора показывает, сколько бит данных он может принять и обработать в своих регистрах за один такт. Разрядность процессора определяется разрядностью командной шины, то есть количеством проводников в шине, по которой передаются команды. Современные процессоры семейства&nbsp;Intel&nbsp;являются 32-разрядными.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Рабочее напряжение процессора обеспечивается материнской платой, поэтому разным маркам процессоров отвечают разные материнские платы. Рабочее напряжение процессоров не превышает 3 В. Снижение рабочего напряжения разрешает уменьшить размеры процессоров, а также уменьшить тепловыделение в процессоре, что разрешает увеличить его производительность без угрозы перегрева.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Коэффициент внутреннего умножения тактовой частоты - это коэффициент, на который следует умножить тактовую частоту материнской платы, для достижения частоты процессора. Тактовые сигналы процессор получает от материнской платы, которая из чисто физических причин не может работать на таких высоких частотах, как процессор. Для получения более высоких частот в процессоре происходит внутреннее умножение на коэффициент 4, 4.5, 5 и больше.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Архитектура процессоров (CISC, RISC, MISC)</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">&nbsp;— это устройство, представляющее собой одну или несколько больших интегральных схем (БИС), выполняющих функции процессора ЭВМ. Классическое вычислительное устройство состоит из арифметического устройства (АУ), устройства управления (УУ), запоминающего устройства (ЗУ) и устройства ввода-вывода (УВВ).</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Рисунок 6&nbsp;-&nbsp;Intel&nbsp;Celeron&nbsp;400&nbsp;Socket&nbsp;370 в пластиковом корпусе&nbsp;, вид сверху.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Существуют процессоры различной архитектуры.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">&nbsp;(англ.&nbsp;Complex&nbsp;Instruction&nbsp;Set&nbsp;Computing) — концепция проектирования процессоров, которая характеризуется следующим набором свойств:</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">большим числом различных по формату и длине команд;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">введением большого числа различных режимов адресации;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">обладает сложной кодировкой инструкции.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Процессору с архитектурой CISC приходится иметь дело с более сложными инструкциями неодинаковой длины. Выполнение одиночной CISC-инструкции может происходить быстрее, однако обрабатывать несколько таких инструкций параллельно сложнее.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Облегчение отладки программ на ассемблере влечет за собой загромождение узлами микропроцессорного блока. Для повышения быстродействия следует увеличить тактовую частоту и степень интеграции, что вызывает необходимость совершенствования технологии и, как следствие, более дорогого производства.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><em><font size=\"4\"><br></font></em></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><em><font size=\"4\">Достоинства архитектуры CISC:</font></em></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Компактность наборов инструкций уменьшает размер программ и уменьшает количество обращений к памяти.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Наборы инструкций включают поддержку конструкций высокоуровневого программирования.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Недостатки архитектуры CISC</em>:</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Нерегулярность потока команд.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Высокая стоимость аппаратной части.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Сложности с распараллеливанием вычислений.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">RISC (Reduced Instruction Set Computing).&nbsp;Процессор с сокращенным набором команд. Система команд имеет упрощенный вид. Все команды одинакового формата с простой кодировкой. Обращение к памяти происходит посредством команд загрузки и записи, остальные команды типа регистр-регистр. Команда, поступающая в CPU, уже разделена по полям и не требует дополнительной дешифрации.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Часть кристалла освобождается для включения дополнительных компонентов. Степень интеграции ниже, чем в предыдущем архитектурном варианте, поэтому при высоком быстродействии допускается более низкая тактовая частота. Команда меньше загромождает ОЗУ, CPU дешевле. Программной совместимостью указанные архитектуры не обладают. Отладка программ на RISC более сложна. Данная технология может быть реализована программно-совместимым с технологией CISC (например,&nbsp;суперскалярная&nbsp;технология).</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Поскольку RISC-инструкции просты, для их выполнения нужно меньше логических элементов, что в конечном итоге снижает стоимость процессора. Но большая часть программного обеспечения сегодня написана и откомпилирована специально для CISC-процессоров фирмы&nbsp;Intel. Для использования архитектуры RISC нынешние программы должны быть перекомпилированы, а иногда и переписаны заново.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><em><font size=\"4\"><br></font></em></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><em><font size=\"4\">Достоинства архитектуры RISC</font></em></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Снижение нерегулярности потока команд</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Обогащение пространственным параллелизмом</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><em><font size=\"4\"><br></font></em></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><em><font size=\"4\">Недостатки архитектуры RISC</font></em></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">Каждое действие выполняется в 1 такт</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><span style=\"font-size: large;\"><br></span></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><span style=\"font-size: large;\">MISC (Multipurpose&nbsp;lnstruction&nbsp;Set Computer).&nbsp;Элементная база состоит из двух частей, которые либо выполнены в отдельных корпусах, либо объединены. Основная часть – RISC CPU, расширяемый подключением второй части – ПЗУ микропрограммного управления. Система приобретает свойства CISC. Основные команды работают на RISC CPU, а&nbsp;команды расширения преобразуются в адрес микропрограммы. RISC CPU выполняет все команды за один такт, а вторая часть эквивалентна CPU со сложным набором команд. Наличие ПЗУ устраняет недостаток RISC, выраженный в том, что при компиляции с языка высокого уровня микрокод генерируется из библиотеки стандартных функций, занимающей много места в ОЗУ. Поскольку микропрограмма уже дешифрована и открыта для программиста, то времени выборки из ОЗУ на дешифрацию не требуется.</span><br></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\"><br></font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Характеристики и структура микропроцессора.</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Основными узлами МП являются:</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">операционное устройство;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">управляющее устройство;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">счетчик команд;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">регистр команд;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">регистры 1...п;</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><li style=\"hyphens: auto;\">&nbsp; &nbsp; &nbsp;·&nbsp;<font size=\"4\">регистр признаков.</font></li></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Операционное устройство</em>&nbsp;(ОУ) — это устройство, в котором выполняются операции. Оно включает в себя следующие узлы: регистры, сумматоры, каналы передачи информации, мультиплексоры для коммутации каналов, шифраторы, дешифраторы и т.д. Основу ОУ составляет&nbsp;<em>арифметико-логическое устройство</em>&nbsp;(АЛУ), которое предназначено для выполнения предусмотренных МП арифметических и логических операций.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Управляющее устройство</em>&nbsp;(УУ) координирует действия узлов ОУ. Оно вырабатывает в некоторой временной последовательности управляющие сигналы, пол действием которых в узлах ОУ выполняются требуемые действия.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Счетчик команд</em>&nbsp;(СК) (программный счетчик) — это регистр, который хранит адрес следующей команды, которая должна быть выполнена вслед за предыдущей. В процессе исполнения команды содержимое СК автоматически инкрементируется (увеличивается) после выборки каждого байта команды. Таким образом, в любой момент времени его содержимое представляет собой адрес очередной ячейки памяти, где может храниться либо следующая команда, либо дополнительные данные, привлекаемые МП для исполнения данной команды. СК является&nbsp;программно&nbsp;доступным. На содержимое СК пользователь может повлиять только с помощью команд, изменяющих последовательное выполнение программы (например, команд безусловного перехода), а также с помощью некоторых специальных команд.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Регистр команд</em>&nbsp;(РК) — регистр, который воспринимает код текущей команды (первый байт кода команды, код операции) с шины данных и осуществляет его хранение в течение всего времени ее исполнения. РК не доступен программисту. После выполнения очередной команды в РК автоматически записывается код следующей команды из ячейки оперативной памяти, адрес которой содержится в счетчике команд.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Рисунок 7&nbsp;–&nbsp;Упрощенная структура МП</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Регистры&nbsp;</em><em>l...</em><em>n</em>&nbsp;— регистры общего назначения, предназначенные для оперативного хранения данных и промежуточных результатов, участвующих в процессе выполнения программы.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Регистр признаков</em>&nbsp;(РП) (регистр флагов, регистр состояния) — регистр, представляющий собой набор триггеров (индикаторов, флагов). РП дает информацию об особенностях результата последней операции, выполненной АЛУ. Каждый триггер РП предназначен для хранения одного признака результата выполнения операции.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">По&nbsp;<em>шине данных</em>&nbsp;передаются двоичные сигналы, соответствующие кодам данных и команд управляющих программ.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Шина адреса</em>&nbsp;служит для указания места (адреса) расположения данных. По ней МП передает двоичный код соответствующей ячейки памяти (откуда взять или куда записать двоичный код, передаваемый по шине данных).</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">По&nbsp;<em>шине управления</em>&nbsp;передаются сигналы, соответствующие направлению передачи информации, т.е. откуда нужно считать данные (источник) и куда их нужно записать (приемник).</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Причем существуют как внутренние шины МП, так и системные шины МПС. Указанные шины согласованы между собой буферными схемами, расположенными также в МП.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><span style=\"font-size: large;\">Укрупненная функциональная схема УУ приведена на рис. 11.88.</span><br></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Дешифратор команд</em>&nbsp;(ДК) — логический блок, выбирающий в соответствии с поступающим из регистра команд кодом операции (КОП) один из множества имеющихся у него выходов.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em><br></em></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><em>Постоянное запоминающее устройство микропрограмм</em>&nbsp;хранит в своих ячейках управляющие сигналы (импульсы), необходимые для выполнения в блоках МП операций обработки информации. Импульс по выбранному ДК в соответствии с кодом операции считывает из ПЗУ микропрограмм необходимую последовательность управляющих сигналов.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\"><br></font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><strong style=\"hyphens: auto;\"><font size=\"4\">Структура базового микропроцессора</font></strong></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Функционально микропроцессор можно разделить на две части (Рисунок 3):</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">-&nbsp; операционную (устройство управления и устройство обработки данных), содержащую арифметико-логическое устройство, микропроцессорную память (за&nbsp;исключением сегментных регистров), блок микропрограммного управления, объединенных в устройство обработки данных, и устройство управления;</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">-&nbsp; интерфейсную (или устройство связи с магистралью), содержащую блок сегментных регистров микропроцессорной памяти, блок регистров команд (регистры памяти для хранения кодов команд, выполняемых в ближайшие такты работы) и сумматор адреса.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Устройство обработки данных предназначено для выполнения команд. Устройство управления обеспечивает синхронизацию работы устройств микропроцессора, выработку управляющих сигналов и сигналов состояния для обмена с другими устройствами, анализ и соответствующую реакцию на сигналы других устройств ЭВМ.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Устройство связи с магистралью обеспечивает формирование физического адреса памяти и адреса внешнего устройства, выбор команд из памяти, обмен данными с запоминающими устройствами, внешними устройствами, другими процессорами по магистрали.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\"><br></font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">Обе части микропроцессора работают параллельно, причем интерфейсная часть опережает операционную, так что выборка очередной команды из памяти (ее запись в блок регистров команд и предварительный анализ) выполняется во время выполнения операционной частью предыдущей команды. Современные микропроцессоры имеют несколько групп регистров в интерфейсной части, работающих с различной степенью опережения, что позволяет выполнить операции в конвейерном режиме. Такая организация микропроцессора позволяет существенно повысить его эффективное быстродействие.</font></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><br></span><span class=\"block\" style=\"display: block; color: rgb(33, 37, 41); font-family: Roboto, sans-serif;\"><font size=\"4\">На внешних выводах микропроцессора широко используется принцип мультиплексирования сигналов – передача разных сигналов по общим линиям с разделением времени. Кроме того, одни и те же выводы могут использоваться для передачи разных сигналов в зависимости от режима (минимальный или максимальный)</font></span>"}